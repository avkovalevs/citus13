---
# tasks file for citus
- name: "Install apt package requirements"
  apt:
    pkg:  gpg-agent
    state: present
    update_cache: yes
  tags: pg

- name: "Add an Apt signing key, uses whichever key is at the URL"
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - https://repos.citusdata.com/community/gpgkey
    - https://www.postgresql.org/media/keys/ACCC4CF8.asc
  tags: pg

- name: "Add citus and pg apt repositories"
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - deb https://repos.citusdata.com/community/ubuntu/ {{ ansible_distribution_release }} main
    - deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
  tags: pg

- name: "Check if any PG13 databases exists"
  stat:
    path: "{{ postgresql_data_path }}/{{ pg_version }}/main/PG_VERSION"
  register: pg_version_check
  tags: pg

- name: "Stop database processes if exists before delete"
  systemd:
    name: postgresql@{{ pg_version }}-main.service
    state: stopped
    enabled: false
  when: pg_version_check.stat.exists
  tags: pg

- name: "Delete citus and pg packages if exists"
  apt:
    pkg:  
    - postgresql-{{ pg_version }}
    - postgresql-contrib
    - postgresql-{{ pg_version }}-citus-9.5
    - postgresql-client-{{ pg_version }}
    - protobuf-c-compiler
    - libprotobuf-c-dev
    - postgresql-server-dev-{{ pg_version }}
    state: absent
    purge: yes
    update_cache: true
  when: pg_version_check.stat.exists
  tags: pg

- name: "Make sure the postgres data directory does not exists"
  file:
    path: "{{ postgresql_data_path }}/{{ pg_version }}"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
    state: absent
    mode: 0700
  become: true
  when: pg_version_check.stat.exists
  tags: pg

- name: "Make sure the postgres config directory does not exists"
  file:
    path: "{{ postgresql_conf_path }}/{{ pg_version }}"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
    state: absent
    mode: 0700
  become: true
  when: pg_version_check.stat.exists
  tags: pg

- name: "PG13 | Fresh install pg, citus packages"
  apt:
    name: 
    - postgresql-{{ pg_version }}
    - postgresql-{{ pg_version }}-citus-10.2
    state: present
    update_cache: true
  tags: pg
  
- name: "PG13 | Add postgres user to sudoers"
  lineinfile:
    path: /etc/sudoers
    state: present
    line: 'postgres ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
  tags: pg

- name: "PG13 | Check if CITUS databases exists"
  stat:
    path: "{{ postgresql_data_path }}/{{ pg_version }}/citus/PG_VERSION"
  register: pgc_version
  tags: pg

- name: "PG13 | create CITUS cluster"
  shell: "/usr/bin/pg_createcluster {{ pg_version }} citus"
  args:
    executable: /bin/bash
  become: true
  when: not pgc_version.stat.exists
  tags: pg
 
- name: "PG13 | Change postgresql.conf in CITUS cluster"
  lineinfile:
    path: "{{ postgresql_conf_path }}/{{ pg_version }}/citus/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^#listen_addresses =', line: "listen_addresses = '*'"}
  - { regexp: '^#shared_preload_libraries =', line: "shared_preload_libraries = 'citus'"}
  - { regexp: '^#port =', line: "port = 9700"}
  tags: pg

- name: "PG13 | Copy pg_hba.conf to CITUS cluster"
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_path }}/{{ pg_version }}/citus/pg_hba.conf"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "PG13 | Enable and start CITUS PG service"
  systemd:
    name: postgresql@{{ pg_version }}-citus
    enabled: yes
    state: restarted 
    daemon_reload: yes
  tags: pg

- name: "PG13 | Change postgresql.conf in MAIN cluster"
  lineinfile:
    path: "{{ postgresql_conf_path }}/{{ pg_version }}/main/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^#listen_addresses =', line: "listen_addresses = '*'"}
  - { regexp: '^#port =', line: "port = 5432"}
  tags: pg

- name: "PG13 | Copy pg_hba.conf to MAIN cluster"
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_path }}/{{ pg_version }}/main/pg_hba.conf"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
  become: true
  become_user: root
  tags: pg

- name: "PG13 | Enable and start MAIN PG service"
  systemd:
    name: postgresql@{{ pg_version }}-main
    enabled: yes
    state: restarted 
    daemon_reload: yes
  tags: pg

- name: "PG13 | Create db users"
  postgresql_user:
    db: postgres
    port: 9700
    name: "{{ item }}"
    priv: ALL
    role_attr_flags: SUPERUSER,CREATEDB
    state: present
  with_items:
    - gr_prod_dba
    - gr_prod_read
    - gr_prod_write
    - svc_talend_proddb
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "PG13 | Copy SQL to nodes"
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "/var/lib/postgresql/"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
  with_items:
    - restore.sql
    - insert.sql
    - citus.sql
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "PG13 | Restore the database"
  postgresql_db:
    state: restore
    name: postgres
    port: 9700
    target: "/var/lib/postgresql/restore.sql"
  become: true
  become_user: "{{ pg_user }}"
  tags: pg

- name: "PG13 | Get a list of active citus worker nodes"
  shell: psql -p 9700 -d testdbprod -c "SELECT * FROM master_get_active_worker_nodes();"
  args:
    executable: /bin/bash
  register: citus_active_worker_nodes
  when:
    - citus_coordinator
  become: true
  become_user: "{{ pg_user }}"
  become_method: sudo
  changed_when: false
  tags: pg

- debug:
    var: citus_active_worker_nodes
  tags: pg

- name: "PG13 | Add the worker nodes to the citus coordinator"
  shell: "psql -p 9700 -d testdbprod -c \"SELECT * from master_add_node('{{ hostvars[item].ansible_hostname }}', 9700);\""
  args:
    executable: /bin/bash
  register: citus_add_worker_node
  become: true
  become_user: "{{ pg_user }}" 
  become_method: sudo
  # failed_when: "{{ hostvars[item].ansible_hostname }} not in citus_add_worker_node.stdout"
  changed_when: false
  with_items: "{{ groups[citus_host_group] }}"
  when:
    - citus_coordinator
    - not hostvars[item]['citus_coordinator']
      #  - "{{ hostvars[item].ansible_hostname }} not in citus_active_worker_nodes.stdout"
  tags: pg

- debug:
    var: citus_add_worker_nodes
  tags: pg

- name: "PG13 | Create citus tables"
  shell: psql -p 9700 -d testdbprod -f /var/lib/postgresql/citus.sql
  args:
    executable: /bin/bash
  register: citus_active_worker_nodes
  when:
    - citus_coordinator
  become: true
  become_user: "{{ pg_user }}"
  become_method: sudo
  changed_when: false
  tags: pg
